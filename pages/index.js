import Head from 'next/head';
import Image from 'next/image';
import { gql } from "@apollo/client";
import client from "../apollo-client";
import HeroSection from '../components/FrontPage/HeroSection';
import TestHeader from '../components/TestHeader';
import styles from '../styles/Layout.module.css';


const Home = ( {content} ) => {

  console.log({content})
  return (
    <div className={styles.container}>
 
      <Head>
        <title>Home</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.containerFluid}>
        <div className={styles.container}>
          <div id={styles.welcomeMessage} className={styles.colMd12}>
            
            {
              content.map(info => {
                const typeName = info.__typename;
                console.log(typeName)
                switch (typeName) {
                  case 'Page_Homepage_Content_HeroSection':
                      return (
                        <HeroSection/>
                      )  

                }
              })
            }
    
            {/*</div>              
              <h1 className={styles.title}>{content.homePage.heroHeader}</h1> 
              <h2> {content.homePage.homePageSubheader}</h2>
              <p className={styles.info}>{content.homePage.infoText}</p>
            </div>

            <div id={styles.heroSubContainerImg} className={styles.colMd12}>
              <img src={content.homePage.heroImage.sourceUrl} /> */}
          </div>


        </div>
      </main>


    </div>
  )
}

export default Home; 

export async function getStaticProps() {
  const { data } = await client.query({
    query: gql`
    query test {
      page(id: "cG9zdDo5") {
        homePage {
          content {
            ... on Page_Homepage_Content_HeroSection {
              fieldGroupName
              heroHeader
              heroInfoText
              heroSubHeader
              heroImage {
                sourceUrl
              }
            }
          }
        }
      }
    }
    `,
  });

  return {
    props: {
      content: data.page.homePage.content,
    },
 };
}

// export async function getStaticProps() {
//   const { data } = await client.query({
//     query: gql`
//     query test {
//       page(id: "cG9zdDo5") {
//         homePage {
//           homePageHeader
//           homePageSubheader
//           infoText
//           heroImage {
//             sourceUrl
//           }
//         }
//       }
//     }
//     `,
//   });

//   return {
//     props: {
//       content: data.page,
//     },
//  };
// }

